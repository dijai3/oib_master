name:  PR cloud run build image

on:
  pull_request:
    branches:
      - dev
    paths:
      - '.github/workflows/pr-cloud-run-build-image.yaml'

jobs:
  cloud_run_service_check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: src
    env:
      IMAGE_NAME: image_oib_bonus_logic
      REGISTRY_HOSTNAME: eu.gcr.io
      GCLOUD_PROJECT_ID: ${{ secrets.RUN_PROJECT }}

    strategy:
      fail-fast: false
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          project_id: ${{ env.GCLOUD_PROJECT_ID }}
          credentials_json: ${{ secrets.RUN_SA_KEY }}
          create_credentials_file: true

      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Set up docker to authenticate # via gcloud command-line tool.
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY_HOSTNAME }}
      # Generate meta info to be used later in the docker build and push
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY_HOSTNAME }}/${{ env.GCLOUD_PROJECT_ID }}/${{ env.IMAGE_NAME }}
          labels: |
            maintainer=OIB-TEAM
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
          #  org.opencontainers.image.description=nodejs service to transform raw data to canonical
            org.opencontainers.image.vendor=INGKA
          flavor: |
            latest=true
      - name: Set variables
        id: setvars
        run: |
          echo "::set-output name=image::${{ env.REGISTRY_HOSTNAME }}/${{ env.GCLOUD_PROJECT_ID }}/${{ env.IMAGE_NAME }}"
        #  echo "::set-output name=service_name::pr-canonical-service-${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}"
      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image with target test
        uses: docker/build-push-action@v2
        with:
          context: ./src
          load: true
          push: false
          tags: ${{ steps.setvars.outputs.image }}:test
          target: test

      - name: Test docker image
        run: |
          docker run -d -p 8080:8080 ${{ steps.setvars.outputs.image }}:test
