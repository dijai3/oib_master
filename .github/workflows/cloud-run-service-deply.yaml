name: Deploy spring boot app to Cloud Run

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

env:
  PROJECT_ID: ${{secrets.RUN_PROJECT}}
  APP_ID: OIB-Application
  RUN_REGION: europe-west1
  SA_KEY_JSON: ${{secrets.RUN_SA_KEY}}
  REGISTRY_HOSTNAME: eu.gcr.io

jobs:
  deploy-cloud-run-service:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v11.5
        with:
          files: |
            ./

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
         path: ~/.m2
         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
         restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn package

      - id: 'auth'
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: 'google-github-actions/auth@v0'
        with:
          project_id: ${{ secrets.RUN_PROJECT }}
          credentials_json: ${{ secrets.RUN_SA_KEY }}
          create_credentials_file: true

      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Set up docker to authenticate # via gcloud command-line tool.
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          gcloud auth configure-docker $REGISTRY_HOSTNAME

      # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        if: steps.changed-files.outputs.any_changed == 'true'        
        uses: docker/setup-buildx-action@v1

      # Generate meta info to be used later in the docker build and push
      - name: Docker meta
        id: meta
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.APP_ID }}
          labels: |
            maintainer=PD-OIB
            org.opencontainers.image.title=${{ env.APP_ID }}
            org.opencontainers.image.description=spring boot service
            org.opencontainers.image.vendor=INGKA
          flavor: |
            latest=true

      - name: Build image and push to Docker Hub and GitHub Container Registry
        id: docker_build
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          push: true
          # relative path to the place where source code with Dockerfile is located
          context: ./
          # Note: tags has to be all lower-case
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: 'Deploy Docker image to Cloud Run'
        #  if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./src
        run: |
          gcloud run deploy ${{ env.APP_ID }} \
          --image ${{ env.REGISTRY_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.APP_ID }} \
          --allow-unauthenticated \
          --region ${{ env.RUN_REGION}} \
          --platform managed \
          --service-account cloud-run@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
         # --set-env-vars NODE_ENV=${{ needs.deploy-infra-canonical.outputs.phase }}
